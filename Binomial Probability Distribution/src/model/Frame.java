/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package model;

import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.XYDataset;

public class Frame extends javax.swing.JFrame {

    double SumAnswer;
    int StartX,nStartX;
    int EndX,nEndX;
    int n,nN;
    double Probability,nP;
    double[] SeparateProbability = null;
    double[] SeparateProbability2 = null;
    
    public Frame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FrameLayeredPane = new javax.swing.JLayeredPane();
        FrameTabbedPane = new javax.swing.JTabbedPane();
        InputParTab = new javax.swing.JPanel();
        StartXLabel = new javax.swing.JLabel();
        StartXTextField = new javax.swing.JTextField();
        xto = new javax.swing.JLabel();
        EndXTextField = new javax.swing.JTextField();
        nLabel = new javax.swing.JLabel();
        nTextField = new javax.swing.JTextField();
        ProbabilityLabel = new javax.swing.JLabel();
        ProbabilityTextField = new javax.swing.JTextField();
        SolveButton = new javax.swing.JButton();
        AnswerLabel = new javax.swing.JLabel();
        AnswerTextField = new javax.swing.JTextField();
        ProbabilityDistributionTableScrollPane = new javax.swing.JScrollPane();
        ProbabilityDistributionTable = new javax.swing.JTable();
        ShowGraphButon = new javax.swing.JButton();
        TableLabel = new javax.swing.JLabel();
        nIncreaseTabbedPane = new javax.swing.JPanel();
        ProbabilityNLabel = new javax.swing.JLabel();
        ProbabilityNTextField = new javax.swing.JTextField();
        StartXNLabel = new javax.swing.JLabel();
        StartXNTextField = new javax.swing.JTextField();
        nNLabel = new javax.swing.JLabel();
        nStartTextField = new javax.swing.JTextField();
        nto = new javax.swing.JLabel();
        EndXNTextField = new javax.swing.JTextField();
        SolveNButton = new javax.swing.JButton();
        nSlider = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        StartXLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StartXLabel.setText("x:");

        StartXTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StartXTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartXTextFieldActionPerformed(evt);
            }
        });

        xto.setText("to");

        EndXTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EndXTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndXTextFieldActionPerformed(evt);
            }
        });

        nLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nLabel.setText("n:");

        nTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nTextFieldActionPerformed(evt);
            }
        });

        ProbabilityLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ProbabilityLabel.setText("Probability:");

        ProbabilityTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ProbabilityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProbabilityTextFieldActionPerformed(evt);
            }
        });

        SolveButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SolveButton.setText("Solve");
        SolveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolveButtonActionPerformed(evt);
            }
        });

        AnswerLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AnswerLabel.setText("Answer:");

        AnswerTextField.setEditable(false);
        AnswerTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AnswerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerTextFieldActionPerformed(evt);
            }
        });

        ProbabilityDistributionTable.setModel(new javax.swing.table.DefaultTableModel(new String[] { "x = 1" }, 1)
            {public boolean isCellEditable(int row, int column) {return false;}}
        );
        ProbabilityDistributionTableScrollPane.setViewportView(ProbabilityDistributionTable);

        ShowGraphButon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ShowGraphButon.setText("Show Graph");
        ShowGraphButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowGraphButonActionPerformed(evt);
            }
        });

        TableLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        TableLabel.setText("Probablity Distribution Table");

        javax.swing.GroupLayout InputParTabLayout = new javax.swing.GroupLayout(InputParTab);
        InputParTab.setLayout(InputParTabLayout);
        InputParTabLayout.setHorizontalGroup(
            InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputParTabLayout.createSequentialGroup()
                .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InputParTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(InputParTabLayout.createSequentialGroup()
                                .addComponent(nLabel)
                                .addGap(18, 18, 18)
                                .addComponent(nTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InputParTabLayout.createSequentialGroup()
                                .addComponent(StartXLabel)
                                .addGap(18, 18, 18)
                                .addComponent(StartXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27)
                        .addComponent(xto)
                        .addGap(18, 18, 18)
                        .addComponent(EndXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(InputParTabLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ShowGraphButon)
                            .addComponent(SolveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(InputParTabLayout.createSequentialGroup()
                                .addComponent(AnswerLabel)
                                .addGap(18, 18, 18)
                                .addComponent(AnswerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InputParTabLayout.createSequentialGroup()
                                .addComponent(ProbabilityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ProbabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TableLabel)
                    .addComponent(ProbabilityDistributionTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        InputParTabLayout.setVerticalGroup(
            InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputParTabLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(TableLabel)
                .addGap(18, 18, 18)
                .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InputParTabLayout.createSequentialGroup()
                        .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InputParTabLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(EndXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(xto)))
                            .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(StartXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(StartXLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProbabilityLabel)
                            .addComponent(ProbabilityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addComponent(SolveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InputParTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AnswerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AnswerLabel))
                        .addGap(18, 18, 18)
                        .addComponent(ShowGraphButon))
                    .addComponent(ProbabilityDistributionTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        FrameTabbedPane.addTab("Input Parameters", InputParTab);

        ProbabilityNLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ProbabilityNLabel.setText("Probability:");

        ProbabilityNTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ProbabilityNTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProbabilityNTextFieldActionPerformed(evt);
            }
        });

        StartXNLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StartXNLabel.setText("x:");

        StartXNTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        StartXNTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartXNTextFieldActionPerformed(evt);
            }
        });

        nNLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nNLabel.setText("n:");

        nStartTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nStartTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nStartTextFieldActionPerformed(evt);
            }
        });

        nto.setText("to");

        EndXNTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EndXNTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndXNTextFieldActionPerformed(evt);
            }
        });

        SolveNButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SolveNButton.setText("Solve");
        SolveNButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolveNButtonActionPerformed(evt);
            }
        });

        nSlider.setName("n");
        nSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                nSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout nIncreaseTabbedPaneLayout = new javax.swing.GroupLayout(nIncreaseTabbedPane);
        nIncreaseTabbedPane.setLayout(nIncreaseTabbedPaneLayout);
        nIncreaseTabbedPaneLayout.setHorizontalGroup(
            nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nIncreaseTabbedPaneLayout.createSequentialGroup()
                .addGroup(nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nIncreaseTabbedPaneLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SolveNButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(nIncreaseTabbedPaneLayout.createSequentialGroup()
                                .addGroup(nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(nIncreaseTabbedPaneLayout.createSequentialGroup()
                                        .addComponent(nNLabel)
                                        .addGap(31, 31, 31)
                                        .addComponent(nStartTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                                    .addGroup(nIncreaseTabbedPaneLayout.createSequentialGroup()
                                        .addComponent(StartXNLabel)
                                        .addGap(32, 32, 32)
                                        .addComponent(StartXNTextField))
                                    .addComponent(ProbabilityNLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ProbabilityNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(nIncreaseTabbedPaneLayout.createSequentialGroup()
                                        .addComponent(nto)
                                        .addGap(9, 9, 9)
                                        .addComponent(EndXNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nIncreaseTabbedPaneLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(579, 579, 579))
        );
        nIncreaseTabbedPaneLayout.setVerticalGroup(
            nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nIncreaseTabbedPaneLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProbabilityNLabel)
                    .addComponent(ProbabilityNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartXNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartXNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndXNTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nto))
                .addGap(18, 18, 18)
                .addGroup(nIncreaseTabbedPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nNLabel)
                    .addComponent(nStartTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(SolveNButton)
                .addGap(36, 36, 36)
                .addComponent(nSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        FrameTabbedPane.addTab("n Increases", nIncreaseTabbedPane);

        FrameTabbedPane.setBounds(0, 0, 810, 480);
        FrameLayeredPane.add(FrameTabbedPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FrameLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FrameLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartXTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartXTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartXTextFieldActionPerformed

    private void EndXTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndXTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndXTextFieldActionPerformed

    private void SolveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolveButtonActionPerformed
        // TODO add your handling code here:
        
        try {
            StartX = Integer.parseInt(StartXTextField.getText());
            EndX = Integer.parseInt(EndXTextField.getText());
            n = Integer.parseInt(nTextField.getText());
            Probability = Double.parseDouble(ProbabilityTextField.getText());
            
            
        } catch (NumberFormatException e) {
            return;
        }
        
        if (Probability < 0 || Probability > 1){
            JOptionPane.showMessageDialog(this, "Probability must be greater than or equal to 0, and less than or equal to 1!");
            return;      
        }
        
        if (n < EndX || n < StartX){
            JOptionPane.showMessageDialog(this, "n should be greater than the range of x!");
            return;
        }
        
        if (EndX < StartX){
            JOptionPane.showMessageDialog(this, "End of range should be greater than Start of Range!");
            return;
        }
        
        if (StartX < 0){
            JOptionPane.showMessageDialog(this, "Start of range should be greater than 0!");
            return;
        }
        
        // Compute for Summation Probability
        SumAnswer = Binomial.summatedProbability(StartX, EndX, n, Probability);
        AnswerTextField.setText(String.format("%.4f", SumAnswer));
        System.out.println(SumAnswer);

        /*
         // Remove existing columns
         while (ProbabilityDistributionTable.getColumnModel().getColumnCount() > 0) {
         TableColumn column = ProbabilityDistributionTable.getColumnModel().getColumn(0);
         ProbabilityDistributionTable.getColumnModel().removeColumn(column);
         }
         */

        DefaultTableModel model = (DefaultTableModel) ProbabilityDistributionTable.getModel();
        model.setRowCount(1);
        model.setColumnCount(EndX - StartX + 1);

        //Compute for Separate Probability
        SeparateProbability = Binomial.separatedProbability(StartX, EndX, n, Probability);
        for (int i = 0; i < SeparateProbability.length; i++) {
            System.out.println("Separate Probability: " + SeparateProbability[i]);
            double rounded = (double) Math.round(SeparateProbability[i] * 10000) / 10000;
            model.setValueAt(rounded, 0, i);
            ProbabilityDistributionTable.getColumnModel().getColumn(i).setHeaderValue("x = " + (StartX + i));
        }
    }//GEN-LAST:event_SolveButtonActionPerformed

    private void AnswerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AnswerTextFieldActionPerformed

    private void nTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nTextFieldActionPerformed

    private void ProbabilityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProbabilityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProbabilityTextFieldActionPerformed

    private void ProbabilityNTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProbabilityNTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProbabilityNTextFieldActionPerformed

    private void StartXNTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartXNTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StartXNTextFieldActionPerformed

    private void nStartTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nStartTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nStartTextFieldActionPerformed

    private void EndXNTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndXNTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EndXNTextFieldActionPerformed

    private void SolveNButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolveNButtonActionPerformed
        // TODO add your handling code here:
            nStartX =Integer.parseInt(StartXNTextField.getText());
            nEndX = Integer.parseInt(EndXNTextField.getText());
            nN = Integer.parseInt(nStartTextField.getText());
            nP = Double.parseDouble(ProbabilityNTextField.getText());
       
            
        DefaultCategoryDataset dataset2 = new DefaultCategoryDataset();
        
        
        SeparateProbability2 = Binomial.separatedProbability(nStartX, nEndX, nN, nP);
        
        if (SeparateProbability2 == null){
            return;
        }
        System.out.println(SeparateProbability2[0]);
        for (int i = 0; i < SeparateProbability2.length; i++) {
            
            dataset2.setValue(SeparateProbability2[i], "Probability distribution", String.valueOf(nStartX+i));
        }
        JFreeChart barChart = ChartFactory.createBarChart("nIncrease", "x", "Probability distribution", dataset2, PlotOrientation.VERTICAL, true, true, false);
        ChartFrame frame1=new ChartFrame("Bar Chart ",barChart);
        frame1.setVisible(true);
        frame1.setSize(400,350);
        ChartPanel panel =new ChartPanel(barChart);
        nIncreaseTabbedPane.add(panel);
        
        
        
    }//GEN-LAST:event_SolveNButtonActionPerformed

    private void ShowGraphButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowGraphButonActionPerformed

        if (SeparateProbability == null){
            return;
        }
        
        SeparateProbability = Binomial.separatedProbability(StartX, EndX, n, Probability);
        DefaultCategoryDataset ds = new DefaultCategoryDataset();
         for (int i = 0; i < SeparateProbability.length; i++) {
             ds.setValue(SeparateProbability[i], "Probability distribution", String.valueOf(StartX+i));
        }
        
        JFreeChart chart = ChartFactory.createBarChart("Test Chart", "x", "Probability Distribution", ds, PlotOrientation.VERTICAL, true, true,false);

        ChartFrame frame1=new ChartFrame("Bar Chart ",chart);
        frame1.setVisible(true);
        frame1.setSize(400,350);
    }//GEN-LAST:event_ShowGraphButonActionPerformed

    private void nSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_nSliderStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_nSliderStateChanged

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });



    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnswerLabel;
    private javax.swing.JTextField AnswerTextField;
    private javax.swing.JTextField EndXNTextField;
    private javax.swing.JTextField EndXTextField;
    private javax.swing.JLayeredPane FrameLayeredPane;
    private javax.swing.JTabbedPane FrameTabbedPane;
    private javax.swing.JPanel InputParTab;
    private javax.swing.JTable ProbabilityDistributionTable;
    private javax.swing.JScrollPane ProbabilityDistributionTableScrollPane;
    private javax.swing.JLabel ProbabilityLabel;
    private javax.swing.JLabel ProbabilityNLabel;
    private javax.swing.JTextField ProbabilityNTextField;
    private javax.swing.JTextField ProbabilityTextField;
    private javax.swing.JButton ShowGraphButon;
    private javax.swing.JButton SolveButton;
    private javax.swing.JButton SolveNButton;
    private javax.swing.JLabel StartXLabel;
    private javax.swing.JLabel StartXNLabel;
    private javax.swing.JTextField StartXNTextField;
    private javax.swing.JTextField StartXTextField;
    private javax.swing.JLabel TableLabel;
    private javax.swing.JPanel nIncreaseTabbedPane;
    private javax.swing.JLabel nLabel;
    private javax.swing.JLabel nNLabel;
    private javax.swing.JSlider nSlider;
    private javax.swing.JTextField nStartTextField;
    private javax.swing.JTextField nTextField;
    private javax.swing.JLabel nto;
    private javax.swing.JLabel xto;
    // End of variables declaration//GEN-END:variables
}
